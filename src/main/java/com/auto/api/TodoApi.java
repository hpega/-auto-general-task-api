/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.auto.api;

import java.math.BigDecimal;
import com.auto.model.ToDoItem;
import com.auto.model.ToDoItemAddRequest;
import com.auto.model.ToDoItemNotFoundError;
import com.auto.model.ToDoItemUpdateRequest;
import com.auto.model.ToDoItemValidationError;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-04-24T09:09:40.663+10:00")

@Api(value = "todo", description = "the todo API")
public interface TodoApi {

    @ApiOperation(value = "Retrieve a specific item by id", nickname = "todoIdGet", notes = "", response = ToDoItem.class, tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ToDoItem.class),
        @ApiResponse(code = 400, message = "Validation error", response = ToDoItemValidationError.class),
        @ApiResponse(code = 404, message = "Not Found Error", response = ToDoItemNotFoundError.class) })
    @RequestMapping(value = "/todo/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ToDoItem> todoIdGet(@ApiParam(value = "id",required=true) @PathVariable("id") BigDecimal id);


    @ApiOperation(value = "Modify an item", nickname = "todoIdPatch", notes = "", response = ToDoItem.class, tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ToDoItem.class),
        @ApiResponse(code = 400, message = "Validation error", response = ToDoItemValidationError.class),
        @ApiResponse(code = 404, message = "Not Found Error", response = ToDoItemNotFoundError.class) })
    @RequestMapping(value = "/todo/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<ToDoItem> todoIdPatch(@ApiParam(value = "id",required=true) @PathVariable("id") BigDecimal id,@ApiParam(value = "" ,required=true )  @Valid @RequestBody ToDoItemUpdateRequest body);


    @ApiOperation(value = "Create a to do item", nickname = "todoPost", notes = "", response = ToDoItem.class, tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ToDoItem.class),
        @ApiResponse(code = 400, message = "Validation error", response = ToDoItemValidationError.class) })
    @RequestMapping(value = "/todo",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ToDoItem> todoPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ToDoItemAddRequest body);

}
